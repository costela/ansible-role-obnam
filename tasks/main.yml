---

# TODO: make it package-manager agnostic
- name: install obnam package
  apt:
    name: obnam
    state: present

- name: create obnam wrapper script
  template:
    dest: /etc/obnam_cronjob.sh
    src: obnam_cronjob.sh.j2
    owner: "{{ user_account }}"
    group: "{{ user_account }}"
    mode: '0755'

- name: set up obnam cronjob for {{user_account}}
  cron:
    name: obnam cronjob for {{user_account}}
    user: "{{user_account}}"
    cron_file: "obnam-backup-{{user_account}}"
    special_time: "{{backup_frequency}}"
    job: /etc/obnam_cronjob.sh
  when: backup_frequency is defined

# we work around the fact that the ansible_host_key_* facts don't
# include the key type (ssh-rsa, ecdsa-sha2-nistp256, etc)
- name: populate hostkeys facts
  get_hostkeys:
  register: host_pubkeys
  delegate_to: "{{ repository | regex_replace('sftp://(?:.*?@)?(.*?)/.*', '\\\\1') }}"
  when: (repository | match('sftp://.*'))
        #and ((repository | regex_replace('sftp://(?:.*?@)?(.*?)/.*', '\\1')) in hostvars)

- name: add remote host to known_hosts
  known_hosts:
    host: "{{ repository | regex_replace('sftp://(?:.*?@)?(.*?)/.*', '\\\\1') }}"
    key: "{{ repository | regex_replace('sftp://(?:.*?@)?(.*?)/.*', '\\\\1') }} {{ item.value }}"
    state: present
    allow_multiple: yes
  with_dict: "{{ host_pubkeys.ansible_facts.ssh_hostkeys }}"
  when: host_pubkeys is defined

- name: download GPG public keys
  command: "gpg --recv-keys {% for key in extra_keys %} {{key}} {% endfor %}"
  register: gpg_recv_key_result
  changed_when: "'not changed' not in gpg_recv_key_result.stderr"

- name: add extra keys to repository
  command: "obnam --quiet --repository {{ repository }} --encrypt-with {{ encrypt_with }} add-key {{ ansible_hostname }} {% for item in extra_keys %}--keyid {{ item }}{% endfor %}"
  register: obnam_addkey_result
  failed_when: false
  #changed_when: obnam_addkey_result
